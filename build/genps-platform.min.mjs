class n{implementsSignals=void 0;projectStandardVersion=void 0;pendingDownload=void 0;constructor(n,e={}){this.callbacks=e,this.iframe=n,window.addEventListener("message",(n=>{const e=n.data;if(e&&this.iframe.contentWindow===n.source&&("gps:b:init"===e.type&&e.implementsSignals&&(this.projectStandardVersion=e.v,this.implementsSignals=e.implementsSignals,"function"==typeof this.callbacks.onInit&&(this.callbacks.onInit(this.projectStandardVersion,this.implementsSignals),this.callbacks.onInit=void 0)),"gps:b:load-compl"===e.type&&"function"==typeof this.callbacks.onLoadingComplete&&this.callbacks.onLoadingComplete(),"gps:b:capt-prev"===e.type&&"function"==typeof this.callbacks.onCapturePreview&&this.callbacks.onCapturePreview(),"gps:b:download"===e.type)){if(console.log("download signal received"),!this.pendingDownload)return;!function(n,e){const t=document.createElement("a");t.download=e,t.href=n,document.body.appendChild(t),t.click(),document.body.removeChild(t)}(e.dataUrl,`${this.pendingDownload.key}.${e.ext}`),"function"==typeof this.pendingDownload.callback&&(console.log("calling callback()"),this.pendingDownload.callback()),this.pendingDownload=void 0}}));const t=()=>{this.iframe.contentWindow.postMessage({type:"gps:f:init",v:"1.0.1"},"*")};this.iframe.addEventListener("load",t),t()}get downloadSignals(){return this.implementsSignals?.filter((n=>"gps:f:download"===n.type))}triggerDownload(n){return this.pendingDownload?Promise.reject("Only one active download is supported at a time"):new Promise((e=>{this.pendingDownload={key:n,callback:e},this.iframe.contentWindow.postMessage({type:"gps:f:download",key:n},"*")}))}}export{n as GenArtPlatform};
